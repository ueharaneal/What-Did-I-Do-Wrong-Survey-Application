{"ast":null,"code":"// This function will allow us to make sure the inputs are validated emails. \n//filter function will allow us to keep the invalid emails\n\nconst re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport default (emails => {\n  const invalidEmails = emails.split(',').map(email => email.trim()).filter(email => re.test(email) === false);\n  if (invalidEmails.length) {\n    return `These emails are invalid: ${invalidEmails}`;\n  }\n  return null;\n});","map":{"version":3,"names":["re","emails","invalidEmails","split","map","email","trim","filter","test","length"],"sources":["/Users/neal/Desktop/code/nodereact/wdidw/server/client/src/utils/validateEmail.js"],"sourcesContent":["  // This function will allow us to make sure the inputs are validated emails. \n  //filter function will allow us to keep the invalid emails\n  \n  const re =/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  export default (emails) =>{\n    const invalidEmails = emails.split(',')\n      .map(email=> email.trim())\n      .filter(email=> re.test(email) === false)\n\n    if(invalidEmails.length){\n      return `These emails are invalid: ${invalidEmails}`;\n    }\n    return null;\n  }\n\n"],"mappings":"AAAE;AACA;;AAEA,MAAMA,EAAE,GAAE,wJAAwJ;AAClK,gBAAgBC,MAAM,IAAI;EACxB,MAAMC,aAAa,GAAGD,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,CACpCC,GAAG,CAACC,KAAK,IAAGA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBC,MAAM,CAACF,KAAK,IAAGL,EAAE,CAACQ,IAAI,CAACH,KAAK,CAAC,KAAK,KAAK,CAAC;EAE3C,IAAGH,aAAa,CAACO,MAAM,EAAC;IACtB,OAAQ,6BAA4BP,aAAc,EAAC;EACrD;EACA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}